version: '3'
services:
  #services

  gateway:
    image: traefik:v1.7
    command: --api --docker
    ports:
      - "80:80"     # The HTTP port
      - "8080:8080" # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - fake
      - files
      - images
      - profiles
      - visualizator
      - zaidel

  fake:
    container_name: fakeservice
    build: ../picart-fake-service
    ports:
      - 3000:3000
    volumes:
      - ../picart-fake-service:/home/app
    labels:
      - "traefik.backend=fakeservice"
      - "traefik.port=3000"
      - "traefik.backend.healthcheck.path=/service/health"

  files:
    container_name: files
    build: ../picart-files-service
    environment:
      - MONGODB_URL=mongodb://mongo:27017/files
      - PORT=3000
      - TOKEN_SECRET=secret
    depends_on:
      - mongo
    volumes:
      - ../picart-files-service:/home/app
    labels:
      - "traefik.backend=files"
      - "traefik.frontend.rule=PathPrefix:/api/v1/files,/api/v1/chunks;ReplacePathRegex:^/api/v1/(.*) /$$1"
      - "traefik.port=3000"
      - "traefik.backend.healthcheck.path=/service/health"
    command: bash -c "yarn start:watch"

  images:
    container_name: images
    build: ../picart-images-service
    environment:
      - PORT=3000
      - MONGODB_URL=mongodb://mongo:27017/images
    depends_on:
      - mongo
    volumes:
      - ../picart-images-service:/home/app
    labels:
      - "traefik.backend=images"
      - "traefik.frontend.rule=PathPrefix:/api/v1/images;ReplacePathRegex:^/api/v1/(.*) /$$1"
      - "traefik.port=3000"
      - "traefik.backend.healthcheck.path=/service/health"
    command: yarn run dev

  profiles:
    container_name: profiles
    build: ../picart-profiles-service
    environment:
      - MONGODB_URL=mongodb://mongo:27017/profiles
      - PORT=3000
      - TOKEN_SECRET=secret
      - ADMIN_PASSWORD=test
      - SENDER_EMAIL
      - SENDER_EMAIL_PASSWORD
    depends_on:
      - mongo
    volumes:
      - ../picart-profiles-service:/home/app
    labels:
      - "traefik.backend=profiles"
      - "traefik.frontend.rule=PathPrefix:/api/v1/profiles,/api/v1/tokens;ReplacePathRegex:^/api/v1/(.*) /$$1"
      - "traefik.port=3000"
      - "traefik.backend.healthcheck.path=/service/health"
    command: bash -c "yarn start:watch"

  researches:
    container_name: researches
    build: ../picart-researches-service
    environment:
      - MONGODB_URL=mongodb://mongo:27017/researches
      - PORT=3000
      - TOKEN_SECRET=secret
    depends_on:
      - mongo
    volumes:
      - ../picart-researches-service:/home/app
    labels:
      - "traefik.backend=researches"
      - "traefik.frontend.rule=PathPrefix:/api/v1/researches;ReplacePathRegex:^/api/v1/(.*) /$$1"
      - "traefik.port=3000"
      - "traefik.backend.healthcheck.path=/service/health"
    command: bash -c "yarn start:watch"

  visualizator:
    container_name: visualizator
    build:
      context: ../picart-spectum-visualizator
      dockerfile: Dockerfile.dev
    depends_on:
      - profiles
      - images
      - files
    volumes:
      - ../picart-spectum-visualizator:/home/app
    labels:
      - "traefik.backend=visualizator"
      - "traefik.port=3000"
      - "traefik.frontend.rule=PathPrefix:/"
      - "traefik.frontend.priority=1"
      - "traefik.backend.healthcheck.path=/"

  zaidel:
    container_name: zaidel-analyzer
    build: "${GO_PROJECTS_PATH}/zaidel"
    environment:
      - MONGODB_URL=mongodb://mongo:27017
    depends_on:
     - mongo
    labels:
      - "traefik.backend=zaidel-analyzer"
      - "traefik.frontend.rule=PathPrefix:/api/v1/zaidel-analyzer;ReplacePathRegex:^/api/v1/zaidel-analyzer/(.*) /$$1"
      - "traefik.port=3000"
      - "traefik.backend.healthcheck.path=/peaks/settings"

  #databases
  mongo:
    image: 'mongo'
    volumes:
      - mongo:/data/db
    ports:
      - 28017:27017

volumes:
  mongo: {}
